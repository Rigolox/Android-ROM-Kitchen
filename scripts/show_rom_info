clear

echo

if [ -d BOOT-EXTRACTED ]
then
  echo "BOOT-EXTRACTED already exists, cannot continue"
  exit 0
fi


clear
echo
echo "Please wait ..."


if [ -d WORKING_* ]
then

  cd WORKING_*
  
  if [ ! -e META-INF/com/google/android/update-script ]
  then
    echo "Error: update-script not found, cannot continue"
    cd ..
    rm -rf BOOT-EXTRACTED
    exit 0
  fi

  cd ..

else
  exit 0
fi


#
# Check Android OS version
#

cd WORKING_*
cd system

android_os=`grep -m 1 ^ro.build.version.release= *.prop \
           | sed 's/ro.build.version.release=//g' \
           | sed 's/[^:]*://g'`

if [ "$android_os" == "" ]
then
  android_os=UNKNOWN
fi

cd ../..




#
# Check Build Number
#

cd WORKING_*
cd system

if [ `grep -c ro.product.version build.prop` == 0 ]
then
  id_var=ro.build.display.id
else
  id_var=ro.product.version
fi

str=^$id_var=
file_count=`grep -l $str *.prop | grep -c .prop`

if [ $file_count == 0 ]
then
  rom_name=UNKNOWN

elif [ $file_count -gt 1 ]
then
  rom_name="DEFINED $file_count TIMES"

else
  rom_name=`grep -m 1 $str *.prop \
            | sed 's/'"$id_var"'=//g' \
            | sed 's/[^:]*://g'`
fi

cd ../..





#
# Check root
#

cd WORKING_*
cd system

grep_root=`grep -m 1 ro.secure default.prop`

if [ "$grep_root" == "ro.secure=1" ] 
then
  unsecure_status=NO
elif [ "$grep_root" == "ro.secure=0" ]
then
  unsecure_status=YES
else
  unsecure_status=UNKNOWN
fi

cd ../..

cd WORKING_*

if [ "`find . -name su`" == "" ] 
then
  su_status=NO
elif [ "`find . -name Superuser.apk`" == "" ]
then
  su_status=NO
else
  su_status=YES
fi

cd ..



#
# Check busybox
#

cd WORKING_*

if [ "`find . -name busybox`" == "" ] 
then
  bb_status=NO
else
  bb_status=YES
fi

cd ..



#
# Check wireless tethering
#

scripts/pre_froyo_check
is_old=$?

if [ "$is_old" == "1" ] 
then

  cd WORKING_*

  tether_list=( wireless_tether* android.tether* )

  if [ "$su_status" == "YES" ] 
  then
    tether_status=NO*
  else
    tether_status=NO
  fi

  for find_tether in ${tether_list[@]}
  do
    
    res=`find . -name $find_tether`
    if [ "$res" != "" ]
    then
      tether_status=YES
      break
    fi

  done
  cd ..
fi


#
# Check /data/app
#

scripts/data_app_exists

if [ "$?" == "1" ]
then
  data_app_status=YES
else
  data_app_status=NO
fi


#
# Check /data/local
#

cd WORKING_*
cd META-INF/com/google/android
grep_data_local=`grep -c "0771 DATA:local" update-script`

if [ "$grep_data_local" == "1" ]
then
  custom_anim_status=YES
else
  custom_anim_status=NO
fi

cd ../../../../..


#
# Check if ROM contains Nano
#

cd WORKING_*

if [ "`find . -name nano`" == "" ] 
then
  nano_status=NO
else
  nano_status=YES
fi

cd ..



#
# Check if ROM contains Bash
#

cd WORKING_*

if [ "`find . -name bash`" == "" ]
then
  bash_status=NO
else
  bash_status=YES
fi

cd ..



#
# Check if ROM contains modem.bin
# Need to make this a little more thorough.  Also want to add
# the ability to have the user drop their own modem in.
#

cd WORKING_*

if [ -e modem.bin ]
then
  radio_status=YES
else
  radio_status=NO
fi

cd ..



#
# Check if ROM is deodexed
#

cd WORKING_*

if [ "`find system/framework -name *.odex`" == "" ]
then
  deodex_fr_status=YES
else
  deodex_fr_status=NO
fi

if [ "`find system/app -name *.odex`" == "" ]
then
  deodex_app_status=YES
else
  deodex_app_status=NO
fi

cd ..




#
# Check if ROM does a wipe
#

cd WORKING_*

cd META-INF/com/google/android
grep_wipe=`grep -c "format DATA:" update-script`
  
if [ "$grep_wipe" == "0" ]
then
  wipe_status=NO  
else
  wipe_status=YES
fi

cd ../../../../..





clear

echo
echo "Working folder information"
echo "-------------------------------------"
echo
echo " Android OS version             : $android_os"
echo " ROM Name                       : $rom_name"
echo " Rooted (unsecured boot)        : $unsecure_status"
echo " Rooted (Superuser.apk + su)    : $su_status"
echo " BusyBox installed              : $bb_status"


if [ "$is_old" == "1" ]; then
echo " Wireless tethering installed   : $tether_status"
fi

echo " /data/app enabled              : $data_app_status"
echo " Custom boot animation allowed  : $custom_anim_status"                                                         
echo " Nano text editor installed     : $nano_status"
echo " Bash shell support             : $bash_status"
echo " /system/framework is deodexed  : $deodex_fr_status"
echo " /system/app is deodexed        : $deodex_app_status"
echo " modem.bin found                : $radio_status"
echo " ROM will wipe all data         : $wipe_status"
echo

if [ "$is_old" == "1" ]
then
  if [ "$tether_status" == "NO*" ]
  then
    echo -n " * - No "
    
    for find_tether in ${tether_list[@]}
    do
      echo -n "$find_tether " 
    done

    echo
  fi 
fi

rm -rf BOOT-EXTRACTED


