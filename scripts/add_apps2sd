
if [ "$1" == "" ]
then
  clear

elif [ "$1" == "show_help" ]
then

  clear
  echo
  echo "-----------------------------------------------------------------"
  echo  
  echo "Apps2SD is a feature that will allow all your apps to be"
  echo "installed onto the SD card to save storage space on your device."
  echo "This kitchen uses the Darktremor Apps2SD method."
  echo 
  echo "Ensure you have a fast memory card (e.g. Class 6), and that"
  echo "it is partitioned with an appropriate filesystem, preferably"
  echo "EXT3.  A swap partition is usually not necessary."
  echo
  echo "-----------------------------------------------------------------"
  echo

fi

echo -n "Proceed with Apps2SD (y/n)? (default: y): "
read do_apps2sd

if [ "$do_apps2sd" == "n" ]
then
  exit 0
fi

echo

if [ -d WORKING_* ]
then

  cd WORKING_*

  su_path=`find . -name su`

  if [ "$su_path" == "" ]
  then
    echo "'su' binary not found under working folder!"
    echo "You must root your ROM first."
    cd ..
    exit 0
  else

    echo
    echo "Found $su_path"

    cd .. 
    scripts/a2sd_exists

    if [ "$?" == "1" ]
    then
      echo
      echo "a2sd is already installed!"
      scripts/add_cachesd_to_update_script
      exit 0
    fi

  fi

else
  echo
  echo Working folder not found, you will need to create one!
  exit 0
fi


scripts/ensure_boot_extracted

if [ -d BOOT-EXTRACTED ]
then
  if [ -d WORKING_* ]
  then
    echo
  else
    exit 0
  fi
else
  exit 0
fi


cd BOOT-EXTRACTED/boot.img-ramdisk

test_property=`grep -c "on property:cm.filesystem.ready=1" init.rc`
test_start_a2sd=`grep -c "start a2sd" init.rc`
test_sysinit=`grep -c "start sysinit" init.rc`
test_cm_sysinit=`grep -c "exec /system/bin/sysinit" init.rc`

if [[ "$test_property" != "0" && "$test_start_a2sd" != "0" ]] || \
   [[ "$test_property" != "0" && "$test_sysinit" != "0" ]] || \
   [[ "$test_property" != "0" && "$test_cm_sysinit" != "0" ]] 
then
  echo "init.rc already has content to start a2sd!"
  cd ../..
  echo 
  echo "Removing BOOT-EXTRACTED folder ..."
  rm -rf BOOT-EXTRACTED

else

  echo
  echo Modifying init.rc in ramdisk to enable Apps2SD ...


  if [ "$test_sysinit" != "0" ] 
  then
    sed -i -e 's/start sysinit/start sysinit\n    on property:cm.filesystem.ready=1/' init.rc 

  elif [ "$test_start_a2sd" != "0" ] && [ "$test_property" == "0" ]
  then
    sed -i -e 's/start a2sd/start a2sd\n    on property:cm.filesystem.ready=1/' init.rc 

  elif [ "$test_start_a2sd" == "0" ] && [ "$test_property" == "0" ]
  then
    sed -i -e 's/class_start default/start a2sd\n    on property:cm.filesystem.ready=1\n\n    class_start default/' init.rc
 
  elif [ "$test_start_a2sd" == "0" ] && [ "$test_property" != "0" ]
  then
    sed -i -e 's/on property:cm.filesystem.ready=1/start a2sd\n    on property:cm.filesystem.ready=1/' init.rc 
  fi

  test_service_a2sd=`grep -c "service a2sd" init.rc`
  test_service_sysinit=`grep -c "service sysinit" init.rc`

  if [ "$test_service_a2sd" == "0" ] && [ "$test_service_sysinit" == "0" ]
  then
    sed -i -e 's/service media /service a2sd \/system\/bin\/logwrapper \/system\/bin\/sh \/system\/bin\/a2sd\n    disabled\n    oneshot\n\nservice media /' init.rc
  fi

  cd ../..
  scripts/build_boot_img

fi

scripts/add_apps2sd_files
scripts/add_apps2sd_to_update_script

#
# apps2sd may have included Bash binary
#
find_cmd=`find tools/apps2sd_files -name bash`
if [ "$find_cmd" != "" ]
then
  scripts/add_bash_to_update_script
fi

#
# Prompt for busybox run-parts method
#

if [ "$test_sysinit" == "0" ] 
then
  scripts/add_busybox_run_parts for_apps2sd
fi

#
# Dalvik-cache to SD
#
scripts/add_cachesd_to_update_script

echo
echo Finished

